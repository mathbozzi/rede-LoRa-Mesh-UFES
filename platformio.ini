; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = tbeam
;default_envs = tbeam0.7
default_envs = heltec_wireless_stick
;default_envs = tlora-v1
;default_envs = tlora-v1
;default_envs = tlora_v1_3
;default_envs = tlora-v2
;default_envs = tlora-v2-1-1.6
;default_envs = lora-relay-v1 # nrf board
;default_envs = t-echo

; board specific config can be moved to the respective 'variants' file.
; See https://docs.platformio.org/en/latest/projectconf/section_platformio.html#extra-configs
extra_configs = variants/*/platformio.ini

[common]
; common is not currently used

; REQUIRED environment variables - if not set the specified default will be sued
; The following environment variables must be set in the shell if you'd like to override them.
; They are used in this ini file as systenv.VARNAME, so in your shell do export "VARNAME=fish"
; COUNTRY (default US), i.e. "export COUNTRY=EU865"
; HW_VERSION (default emptystring)

[env]

; note: APP_VERSION now comes from bin/version.json
extra_scripts = bin/platformio-custom.py 

; note: we add src to our include search path so that lmic_project_config can override
; note: TINYGPS_OPTION_NO_CUSTOM_FIELDS is VERY important.  We don't use custom fields and somewhere in that pile
; of code is a heap corruption bug!
; FIXME: fix lib/BluetoothOTA dependency back on src/ so we can remove -Isrc
build_flags = -Wno-missing-field-initializers
  -Wno-format 
  -Isrc -Isrc/mesh -Isrc/gps -Isrc/buzz -Wl,-Map,.pio/build/output.map 
  -DHW_VERSION_${sysenv.COUNTRY}
  -DHW_VERSION=${sysenv.HW_VERSION}
  -DUSE_THREAD_NAMES
  -DTINYGPS_OPTION_NO_CUSTOM_FIELDS

; the default is esptool
; upload_protocol = esp-prog

; monitor_speed = 115200
monitor_speed = 921600

# debug_tool = esp-prog
# debug_port = /dev/ttyACM0

debug_tool = jlink
;upload_protocol = jlink

; debug_tool = olimex-arm-usb-ocd-h
; upload_protocol = olimex-arm-usb-ocd-h

;debug_init_cmds =
;  monitor adapter_khz 10000

lib_deps =
  https://github.com/meshtastic/esp8266-oled-ssd1306.git#d90231dedbb2f52bd7a32fb8ed8edec52cf4a8cb ; ESP8266_SSD1306 
  mathertel/OneButton@^2.0.3 ; OneButton library for non-blocking button debounce
  1202 ; CRC32, explicitly needed because dependency is missing in the ble ota update lib
  https://github.com/meshtastic/arduino-fsm.git
  https://github.com/meshtastic/RadioLib.git#5582ac30578ff3f53f20630a00b2a8a4b8f92c74
  https://github.com/meshtastic/TinyGPSPlus.git
  https://github.com/meshtastic/AXP202X_Library.git#8404abb6d4b486748636bc6ad72d2a47baaf5460
  Wire ; explicitly needed here because the AXP202 library forgets to add it
  SPI
  https://github.com/geeksville/ArduinoThread.git#72921ac222eed6f526ba1682023cee290d9aa1b3
  PubSubClient

; Used for the code analysis in PIO Home / Inspect
check_tool = cppcheck
check_skip_packages = yes

; Common settings for conventional (non Portduino) Arduino targets
[arduino_base]

framework = arduino

lib_deps =
  ${env.lib_deps}

build_flags = ${env.build_flags} -Os 
# -DRADIOLIB_GODMODE

src_filter = ${env.src_filter} -<portduino/>

; Common libs for environmental measurements (not included in native / portduino)
[environmental]
lib_deps =
  adafruit/DHT sensor library@^1.4.1
  adafruit/Adafruit Unified Sensor@^1.1.4
  paulstoffregen/OneWire@^2.3.5
  robtillaart/DS18B20@^0.1.11
  adafruit/Adafruit BME280 Library@^2.2.2
  adafruit/Adafruit BME680 Library@^2.0.1
  adafruit/Adafruit MCP9808 Library@^2.0.0
  
; Common settings for ESP targes, mixin with extends = esp32_base
[esp32_base]
extends = arduino_base
platform = espressif32@3.5.0
src_filter = 
  ${arduino_base.src_filter} -<nrf52/>
upload_speed = 921600
debug_init_break = tbreak setup

# Remove -DMYNEWT_VAL_BLE_HS_LOG_LVL=LOG_LEVEL_CRITICAL for low level BLE logging.
# See library directory for BLE logging possible values: .pio/libdeps/tbeam/NimBLE-Arduino/src/log_common/log_common.h
# This overrides the BLE logging default of LOG_LEVEL_INFO (1) from: .pio/libdeps/tbeam/NimBLE-Arduino/src/esp_nimble_cfg.h
build_flags =
  ${arduino_base.build_flags} -Wall -Wextra -Isrc/esp32 -Isrc/esp32-mfix-esp32-psram-cache-issue -lnimble -std=c++11 
  -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG -DMYNEWT_VAL_BLE_HS_LOG_LVL=LOG_LEVEL_CRITICAL
  -DAXP_DEBUG_PORT=Serial
lib_deps =
  ${arduino_base.lib_deps}
  ${environmental.lib_deps}
  https://github.com/meshtastic/esp32_https_server.git
  h2zero/NimBLE-Arduino@1.3.6
  tobozo/ESP32-targz@^1.1.4
  arduino-libraries/NTPClient#531eff39d9fbc831f3d03f706a161739203fbe2a

# Hmm - this doesn't work yet
# board_build.ldscript = linker/esp32.extram.bss.ld
lib_ignore = 
  segger_rtt
  ESP32 BLE Arduino

platform_packages =
    framework-arduinoespressif32@https://github.com/meshtastic/arduino-esp32.git#4cde0f5d412d2695184f32e8a47e9bea57b45276

; leave this commented out to avoid breaking Windows
;upload_port = /dev/ttyUSB0
;monitor_port = /dev/ttyUSB0

;upload_port = /dev/cu.SLAB_USBtoUART
;monitor_port = /dev/cu.SLAB_USBtoUART

; customize the partition table
; http://docs.platformio.org/en/latest/platforms/espressif32.html#partition-tables
board_build.partitions = partition-table.csv

; not needed included in ttgo-t-beam board file
; also to use PSRAM https://docs.platformio.org/en/latest/platforms/espressif32.html#external-ram-psram
;  -DBOARD_HAS_PSRAM
;  -mfix-esp32-psram-cache-issue

; -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG

; The Heltec Cubecell plus 
; IMPORTANT NOTE: This target doesn't yet work and probably won't ever work.  I'm keeping it around for now.
; For more details see my post in the forum.
;[env:cubecellplus]
;platform = https://github.com/HelTecAutomation/platform-asrmicro650x.git ; we use top-of-tree because stable version has too many bugs - asrmicro650x
;board = cubecell_board_plus
; FIXME, bug in cubecell arduino - they are supposed to set ARDUINO
;build_flags = ${arduino_base.build_flags} -DARDUINO=100 -Isrc/cubecell
;src_filter = 
;  ${arduino_base.src_filter} -<esp32/> -<nrf52/>
  
; Common settings for NRF52 based targets
